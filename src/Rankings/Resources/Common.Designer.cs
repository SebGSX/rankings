//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rankings.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Common {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Common() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rankings.Resources.Common", typeof(Common).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appends a set of contest results from a file into the results file..
        /// </summary>
        internal static string AppendFile_Subcommand_Description {
            get {
                return ResourceManager.GetString("AppendFile_Subcommand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Appends a single contest result to the results file..
        /// </summary>
        internal static string AppendResult_Subcommand_Description {
            get {
                return ResourceManager.GetString("AppendResult_Subcommand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot contain a new line..
        /// </summary>
        internal static string CannotContainNewLine {
            get {
                return ResourceManager.GetString("CannotContainNewLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value cannot be empty or white-space..
        /// </summary>
        internal static string EmptyOrWhiteSpace {
            get {
                return ResourceManager.GetString("EmptyOrWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imports a set of contest results from the specified file into the results file. Each result must be in the form: &quot;&lt;CONTESTANT-1&gt; &lt;SCORE-1&gt;, &lt;CONTESTANT-2&gt; &lt;SCORE-2&gt;&quot;. See help for the append-result command for further information..
        /// </summary>
        internal static string FileOption_Description {
            get {
                return ResourceManager.GetString("FileOption_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file specified does not exist..
        /// </summary>
        internal static string FileOption_Validation_FileDoesNotExist {
            get {
                return ResourceManager.GetString("FileOption_Validation_FileDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adds a single contest result to the results file. A result must be in the form: &quot;&lt;CONTESTANT-1&gt; &lt;SCORE-1&gt;, &lt;CONTESTANT-2&gt; &lt;SCORE-2&gt;&quot;. Replace &lt;CONTESTANT-n&gt; with the contestants&apos; names such as, Team One, Team Two, etc. Names cannot start with - or --, and they cannot include the {0} symbol. Scores must be non-negative, whole numbers without any separator symbols, which means for example that 1000 is appropriate but 1,000 is not. Example: rankings -r &quot;My Team 1{0} Other Team 0&quot;.
        /// </summary>
        internal static string ResultOption_Description {
            get {
                return ResourceManager.GetString("ResultOption_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A result must be separated into two parts by the {0} symbol; one part for each contestant&apos;s name and score..
        /// </summary>
        internal static string ResultOption_Validation_MissingContestantResultSeparator {
            get {
                return ResourceManager.GetString("ResultOption_Validation_MissingContestantResultSeparator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A result can only contain one {0} symbol..
        /// </summary>
        internal static string ResultOption_Validation_MultipleContestantResultSeparators {
            get {
                return ResourceManager.GetString("ResultOption_Validation_MultipleContestantResultSeparators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A result must not contain any line breaks, it must be a single line..
        /// </summary>
        internal static string ResultOption_Validation_NewLineWithinContestantResult {
            get {
                return ResourceManager.GetString("ResultOption_Validation_NewLineWithinContestantResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A result must include names for both contestants. Cannot find a name for contestant {0}..
        /// </summary>
        internal static string ResultOption_Validation_NoContestantName {
            get {
                return ResourceManager.GetString("ResultOption_Validation_NoContestantName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A result must include the results for both contestants. Cannot find a result for contestant {0}..
        /// </summary>
        internal static string ResultOption_Validation_NoContestantResult {
            get {
                return ResourceManager.GetString("ResultOption_Validation_NoContestantResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A result must include scores for both contestants. Cannot find a score for contestant {0}..
        /// </summary>
        internal static string ResultOption_Validation_NoContestantScore {
            get {
                return ResourceManager.GetString("ResultOption_Validation_NoContestantScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate a ranking table..
        /// </summary>
        internal static string RootCommand_Description {
            get {
                return ResourceManager.GetString("RootCommand_Description", resourceCulture);
            }
        }
    }
}
